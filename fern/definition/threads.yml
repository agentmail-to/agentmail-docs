# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  shared: __package__.yml
  inboxes: inboxes.yml
  messages: messages.yml

types:
  ThreadId:
    type: string
    docs: ID of thread.

  ThreadUpdatedAt:
    type: datetime
    docs: Time at which thread was last updated.

  ThreadParticipants:
    type: list<string>
    docs: Addresses of participants in thread. In format `username@domain.com` or `Display Name <username@domain.com>`.

  ThreadSubject:
    type: string
    docs: Subject of thread.

  ThreadPreview:
    type: string
    docs: Text preview of last message in thread.

  ThreadItem:
    properties:
      thread_id: ThreadId
      updated_at: ThreadUpdatedAt
      participants: ThreadParticipants
      subject: optional<ThreadSubject>
      preview: optional<ThreadPreview>

  Thread:
    properties:
      thread_id: ThreadId
      inbox_id: inboxes.InboxId
      created_at:
        type: datetime
        docs: Time at which thread was created.
      updated_at: ThreadUpdatedAt
      subject: optional<ThreadSubject>
      participants: ThreadParticipants
      messages:
        type: list<messages.Message>
        docs: Messages in thread. Ordered by `sent_at` ascending.
    examples:
      - name: CustomName
        value:
          thread_id: "thread_123"
          inbox_id: "yourinbox@agentmail.to"
          created_at: "2024-01-15T09:30:00Z"
          updated_at: "2024-01-15T10:15:00Z"
          subject: "Project Discussion"
          participants:
            - "alice@example.com"
            - "bob@example.com"
          messages:
            - message_id: "msg_123"
              thread_id: "thread_123"
              sent_at: "2024-01-15T09:30:00Z"
              received_at: "2024-01-15T09:30:00Z"
              from: "alice@example.com"
              to:
                - "bob@example.com"
              text: "Let's review the timeline for the project."

  ListThreadsResponse:
    properties:
      threads:
        type: list<ThreadItem>
        docs: Thread items. Ordered by `updated_at` descending.
      count: shared.Count
      limit: optional<shared.Limit>
      last_key: optional<shared.LastKey>
    examples:
      - name: CustomName
        value:
          threads:
            - thread_id: "thread_123"
              updated_at: "2024-01-15T09:30:00Z"
              participants:
                - "alice@example.com"
                - "bob@example.com"
              subject: "Project Discussion"
              preview: "Let's review the timeline for..."
            - thread_id: "thread_456"
              updated_at: "2024-01-15T10:15:00Z"
              participants:
                - "charlie@example.com"
                - "david@example.com"
              subject: "Weekly Update"
              preview: "Here's what we accomplished..."
          limit: 10
          count: 2
          last_key: "thread_456#2024-01-15T10:15:00Z"

service:
  base-path: /inboxes/{inbox_id}
  path-parameters:
    inbox_id: inboxes.InboxId

  auth: true

  endpoints:
    list:
      method: GET
      path: /threads
      display-name: List Threads
      docs: List threads in inbox. If neither or both `received` and `sent` query parameters are set, all threads are returned.
      request:
        name: ListThreadsRequest
        query-parameters:
          received: optional<shared.Received>
          sent: optional<shared.Sent>
          limit: optional<shared.Limit>
          last_key: optional<shared.LastKey>
      response: ListThreadsResponse
      errors:
        - shared.NotFoundError
      examples:
        - path-parameters:
            inbox_id: yourinbox@agentmail.to
          query-parameters:
            limit: 10
          response:
            body: $ListThreadsResponse.CustomName
          code-samples:
            - sdk: python
              code: |
                from agentmail import AgentMail
                client = AgentMail(api_key="YOUR_API_KEY")
                threads = client.threads.list(inbox_id="yourinbox@agentmail.to", limit=10)
            - sdk: typescript
              code: |
                import { AgentMail } from "agentmail";
                const client = new AgentMail({ apiKey: "YOUR_API_KEY" });
                const threads = await client.threads.list({ 
                  inboxId: "yourinbox@agentmail.to",
                  limit: 10 
                });

    get:
      method: GET
      path: /threads/{thread_id}
      display-name: Get Thread
      path-parameters:
        thread_id: ThreadId
      response: Thread
      errors:
        - shared.NotFoundError
      examples:
        - path-parameters:
            inbox_id: yourinbox@agentmail.to
            thread_id: "thread_123"
          response:
            body: $Thread.CustomName
          code-samples:
            - sdk: python
              code: |
                from agentmail import AgentMail
                client = AgentMail(api_key="YOUR_API_KEY")
                thread = client.threads.get(
                    inbox_id="yourinbox@agentmail.to",
                    thread_id="thread_123"
                )
            - sdk: typescript
              code: |
                import { AgentMail } from "agentmail";
                const client = new AgentMail({ apiKey: "YOUR_API_KEY" });
                const thread = await client.threads.get({
                  inboxId: "yourinbox@agentmail.to",
                  threadId: "thread_123"
                });

    # delete:
    #   method: DELETE
    #   path: /threads/{thread_id}
    #   path-parameters:
    #     thread_id: ThreadId
    #   display-name: Delete Thread
    #   docs: Delete thread and all of its messages and attachments.
    #   errors:
    #     - shared.NotFoundError
