# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  shared: __package__.yml
  inboxes: inboxes.yml
  threads: threads.yml
  attachments: attachments.yml

types:
  MessageId:
    type: string
    docs: ID of message.

  MessageSentAt:
    type: datetime
    docs: Time at which message was sent.

  MessageFrom:
    type: string
    docs: Address of sender. In format `username@domain.com` or `Display Name <username@domain.com>`.

  MessageSubject:
    type: optional<string>
    docs: Subject of message.

  MessagePreview:
    type: optional<string>
    docs: Text preview of message.

  MessageTo:
    type: list<string>
    docs: Addresses of recipients. In format `username@domain.com` or `Display Name <username@domain.com>`.

  MessageCc:
    type: optional<list<string>>
    docs: Addresses of CC recipients. In format `username@domain.com` or `Display Name <username@domain.com>`.

  MessageBcc:
    type: optional<list<string>>
    docs: Addresses of BCC recipients. In format `username@domain.com` or `Display Name <username@domain.com>`.

  MessageAttachments:
    type: optional<list<attachments.Attachment>>
    docs: Attachments in message.

  MessageItem:
    properties:
      id: MessageId
      sent_at: MessageSentAt
      from: MessageFrom
      subject: MessageSubject
      preview: MessagePreview
      to: MessageTo
      cc: MessageCc
      bcc: MessageBcc
      attachments: MessageAttachments

  MessageThreadId:
    type: string
    docs: Thread ID of message.

  MessageText:
    type: optional<string>
    docs: Plain text body of message.

  MessageHtml:
    type: optional<string>
    docs: HTML body of message.

  Message:
    properties:
      id: MessageId
      thread_id: MessageThreadId
      sent_at: MessageSentAt
      recieved_at:
        type: datetime
        docs: Time at which message was received.
      from: MessageFrom
      subject: MessageSubject
      preview: MessagePreview
      to: MessageTo
      cc: MessageCc
      bcc: MessageBcc
      text: MessageText
      html: MessageHtml
      attachments: MessageAttachments
      # in_reply_to:
      #   type: optional<string>
      #   docs: ID of message being replied to.
      # references:
      #   type: optional<list<string>>
      #   docs: IDs of messages in thread.

  ListMessagesResponse:
    properties:
      messages:
        type: list<MessageItem>
        docs: Messages items. Ordered by `sent_at` descending.
      limit: shared.Limit
      count: shared.Count
      last_key: shared.LastKey

  Addresses:
    discriminated: false
    union:
      - string
      - list<string>

  SendMessageTo:
    type: Addresses
    docs: Recipient address or addresses.

  SendMessageCc:
    type: optional<Addresses>
    docs: CC recipient address or addresses.

  SendMessageBcc:
    type: optional<Addresses>
    docs: BCC recipient address or addresses.

  SendMessageRequest:
    properties:
      to: SendMessageTo
      cc: SendMessageCc
      bcc: SendMessageBcc
      subject: MessageSubject
      text: MessageText
      html: MessageHtml

  SendMessageResponse:
    properties:
      thread_id: MessageThreadId
      message_id: MessageId

  ReplyToMessageRequest:
    properties:
      to: optional<SendMessageTo>
      cc: SendMessageCc
      bcc: SendMessageBcc
      text: MessageText
      html: MessageHtml

errors:
  MessageDoesNotExistError:
    status-code: 404
    type: string

service:
  base-path: /inboxes/{inbox_id}/messages
  path-parameters:
    inbox_id: inboxes.InboxId

  auth: true

  endpoints:
    listMessages:
      method: GET
      path: /
      request:
        name: ListMessagesRequest
        query-parameters:
          limit: shared.QueryLimit
          last_key: shared.LastKey
      response: ListMessagesResponse
      errors:
        - inboxes.InboxDoesNotExistError

    getMessage:
      method: GET
      path: /{message_id}
      path-parameters:
        message_id: MessageId
      response: Message
      errors:
        - inboxes.InboxDoesNotExistError
        - MessageDoesNotExistError

    deleteMessage:
      method: DELETE
      path: /{message_id}
      path-parameters:
        message_id: MessageId
      errors:
        - inboxes.InboxDoesNotExistError
        - MessageDoesNotExistError

    sendMessage:
      method: POST
      path: /send
      request: SendMessageRequest
      response: SendMessageResponse
      errors:
        - inboxes.InboxDoesNotExistError

    replyToMessage:
      method: POST
      path: /{message_id}/reply
      path-parameters:
        message_id: MessageId
      request: ReplyToMessageRequest
      response: SendMessageResponse
      errors:
        - inboxes.InboxDoesNotExistError
        - MessageDoesNotExistError
