# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

navigation:
  - threads.yml
  - messages.yml
  - drafts.yml
  - metrics.yml

imports:
  global: ../__package__.yml

types:
  InboxId:
    type: string
    docs: ID of inbox.

  DisplayName:
    type: string
    docs: "Display name: `Display Name <username@domain.com>`."

  ClientId:
    type: string
    docs: Client ID of inbox.

  Inbox:
    properties:
      inbox_id: InboxId
      display_name: optional<DisplayName>
      client_id: optional<ClientId>
      updated_at:
        type: datetime
        docs: Time at which inbox was last updated.
      created_at:
        type: datetime
        docs: Time at which inbox was created.

  ListInboxesResponse:
    properties:
      count: global.Count
      limit: optional<global.Limit>
      next_page_token: optional<global.PageToken>
      inboxes:
        type: list<Inbox>
        docs: Ordered by `created_at` descending.

  CreateInboxRequest:
    properties:
      username:
        type: optional<string>
        docs: Username of address. Randomly generated if not specified.
      domain:
        type: optional<string>
        docs: Domain of address. Must be verified domain. Defaults to `agentmail.to`.
      display_name: optional<DisplayName>
      client_id: optional<ClientId>

  UpdateInboxRequest:
    properties:
      display_name: DisplayName

service:
  url: Http
  base-path: /inboxes
  auth: true

  endpoints:
    list:
      method: GET
      path: ""
      display-name: List Inboxes
      request:
        name: ListInboxesRequest
        query-parameters:
          limit: optional<global.Limit>
          page_token: optional<global.PageToken>
      response: ListInboxesResponse

    get:
      method: GET
      path: /{inbox_id}
      display-name: Get Inbox
      path-parameters:
        inbox_id: InboxId
      response: Inbox
      errors:
        - global.NotFoundError

    create:
      method: POST
      path: ""
      display-name: Create Inbox
      request: CreateInboxRequest
      response: Inbox
      errors:
        - global.ValidationError

    update:
      method: PATCH
      path: /{inbox_id}
      display-name: Update Inbox
      path-parameters:
        inbox_id: InboxId
      request: UpdateInboxRequest
      response: Inbox
      errors:
        - global.NotFoundError

    delete:
      method: DELETE
      path: /{inbox_id}
      display-name: Delete Inbox
      path-parameters:
        inbox_id: InboxId
      errors:
        - global.NotFoundError
