/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../index";
import * as AgentMail from "../../../../api/index";
import * as core from "../../../../core";
import { InboxId } from "../../inboxes/types/InboxId";
import { ThreadId } from "../../threads/types/ThreadId";
import { MessageId } from "./MessageId";
import { MessageLabels } from "./MessageLabels";
import { MessageTimestamp } from "./MessageTimestamp";
import { MessageFrom } from "./MessageFrom";
import { MessageTo } from "./MessageTo";
import { MessageCc } from "./MessageCc";
import { MessageBcc } from "./MessageBcc";
import { MessageSubject } from "./MessageSubject";
import { MessagePreview } from "./MessagePreview";
import { MessageText } from "./MessageText";
import { MessageHtml } from "./MessageHtml";
import { MessageAttachments } from "./MessageAttachments";
export declare const Message: core.serialization.ObjectSchema<serializers.Message.Raw, AgentMail.Message>;
export declare namespace Message {
    interface Raw {
        inbox_id: InboxId.Raw;
        thread_id: ThreadId.Raw;
        message_id: MessageId.Raw;
        labels: MessageLabels.Raw;
        timestamp: MessageTimestamp.Raw;
        from: MessageFrom.Raw;
        reply_to?: string[] | null;
        to: MessageTo.Raw;
        cc?: MessageCc.Raw | null;
        bcc?: MessageBcc.Raw | null;
        subject?: MessageSubject.Raw | null;
        preview?: MessagePreview.Raw | null;
        text?: MessageText.Raw | null;
        html?: MessageHtml.Raw | null;
        attachments?: MessageAttachments.Raw | null;
        in_reply_to?: string | null;
        references?: string[] | null;
        updated_at: string;
        created_at: string;
    }
}
